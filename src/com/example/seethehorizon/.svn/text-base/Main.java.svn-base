/*
 * 这是管理两个半个屏幕activity的主activity
 */
package com.example.seethehorizon;

import com.log.logcat.MyLogger;

import android.annotation.SuppressLint;
import android.annotation.TargetApi;
import android.app.Activity;
import android.content.ComponentName;
import android.content.Intent;
import android.graphics.Color;
import android.hardware.Camera;
import android.hardware.Camera.Parameters;
import android.os.Build;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.util.DisplayMetrics;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnLongClickListener;
import android.view.WindowManager;
import android.widget.LinearLayout;
import android.widget.Toast;

public class Main extends Activity {

    private Camera camera;
    private boolean isopent = false;
	//判断锁(判断是否进入静默模式)
	private boolean isUp = false;
	public static int MSG_LOCK_SUCESS = 1;
	public static int MY_PHONE = 2;
	public static int MY_SSM = 3;
	public static int MY_TROCH = 4;
	//定义一个time计时器
//	Timer timer=new Timer();
	
	@SuppressLint("CutPasteId")
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);

//		startService(new Intent(Main.this,TimeServer.class));
		
//		final TextView hint = (TextView)findViewById(R.id.hint);//解锁提示控件
		final LinearLayout main = (LinearLayout)findViewById(R.id.main);//主界面控件
		final LinearLayout linearlayout_datatime = (LinearLayout)findViewById(R.id.datatime);//时间控件
		final LinearLayout linearlayout_lock = (LinearLayout)findViewById(R.id.lock);//锁屏控件
		final LinearLayout datatime2 = (LinearLayout)findViewById(R.id.datatime2);//锁屏控件
		
		DisplayMetrics metric = new DisplayMetrics();
        getWindowManager().getDefaultDisplay().getMetrics(metric);
        final int width = metric.widthPixels;     // 屏幕宽度（像素）
        final int height = metric.heightPixels;   // 屏幕高度（像素）
        
       
        final int linearlayout_time_height = height - width - 80;  //计算出各个控件的高度和宽度(80为状态栏的高度)
		linearlayout_datatime.setLayoutParams(new LinearLayout.LayoutParams(width, linearlayout_time_height)); //设置布局中datatime控件的宽度和高度
		linearlayout_lock.setLayoutParams(new LinearLayout.LayoutParams(width, width));//设置布局中lock控件的宽度和高度
		
		//设置下方圆的布局
		final LinearLayout layout_lock = (LinearLayout) findViewById(R.id.lock);
		final DrawView_lock lock_view = new DrawView_lock(this); 
		layout_lock.addView(lock_view);
		lock_view.setMainHandler(mHandler);

		linearlayout_datatime.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				if(isUp == false){
					toast(isUp);
				}else {
					toast(isUp);
				}
			}
		});
		
		linearlayout_datatime.setOnLongClickListener(new OnLongClickListener() {
			
			@TargetApi(Build.VERSION_CODES.JELLY_BEAN)
			public boolean onLongClick(View v) {
				if(isUp == false){
					linearlayout_datatime.setLayoutParams(new LinearLayout.LayoutParams(width, height));
					linearlayout_lock.setLayoutParams(new LinearLayout.LayoutParams(width, 0));
					layout_lock.setVisibility(View.GONE);
		             getWindow().clearFlags(
                             WindowManager.LayoutParams.FLAG_FORCE_NOT_FULLSCREEN);
		             getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
                             WindowManager.LayoutParams.FLAG_FULLSCREEN);
					main.setBackgroundColor(Color.BLACK);
					datatime2.setBackgroundColor(Color.argb(100, 255, 255, 255));
					isUp = true;
					toast(isUp);
					MyLogger.showLogWithLineNum(1, "Main", "isUp = "+ isUp);
				}else {
					linearlayout_datatime.setLayoutParams(new LinearLayout.LayoutParams(width, linearlayout_time_height));
					linearlayout_lock.setLayoutParams(new LinearLayout.LayoutParams(width, width));
					layout_lock.setVisibility(View.VISIBLE);
		             getWindow().clearFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN);

		             getWindow().setFlags(
		                                WindowManager.LayoutParams.FLAG_FORCE_NOT_FULLSCREEN,
		                                WindowManager.LayoutParams.FLAG_FORCE_NOT_FULLSCREEN);
					main.setBackgroundColor(Color.argb(159, 0, 0, 0));
					datatime2.setBackgroundColor(Color.BLACK);
					isUp = false;
					toast(isUp);
					MyLogger.showLogWithLineNum(1, "Main", "isUp = "+ isUp);
				}
			return false;
			}
		});
		
//		final Runnable hint_run = new Runnable() {
//		
//		@Override
//		public void run() {
//			hint.setVisibility(View.GONE);
//		}
//	};
//	
	}
	
	@SuppressLint("HandlerLeak")
	public Handler mHandler =new Handler (){
		
		public void handleMessage(Message msg){

			if(MSG_LOCK_SUCESS == msg.what)
			{
				Intent i= new Intent(Intent.ACTION_MAIN);
				i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK); //提示如果是服务里调用，必须加入new task标识
				i.addCategory(Intent.CATEGORY_HOME);
				startActivity(i);
				kg();
				finish();
			}
			if(MY_PHONE == msg.what)
			{
				Intent intent = new Intent(Intent.ACTION_DIAL);
				intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK
						| Intent.FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS);
				startActivity(intent);
				kg();
				finish();
			}
			if(MY_SSM == msg.what)
			{
				Intent intent = new Intent();
				ComponentName comp = new ComponentName("com.android.mms",
						"com.android.mms.ui.ConversationList");
				intent.setComponent(comp);
				intent.setAction("android.intent.action.VIEW");
				intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK
						| Intent.FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS);
				startActivity(intent);
				kg();
				finish();
			}
			if(MY_TROCH == msg.what)
			{
				if(!isopent)
				{
					camera = Camera.open();
					Parameters params = camera.getParameters();
					params.setFlashMode(Parameters.FLASH_MODE_TORCH);
					camera.setParameters(params);
					camera.startPreview();
					isopent = true;
				}
				else
				{
					camera.stopPreview();
					camera.release();
					isopent = false;
				}
			}
		}
		public void kg()
	    {
	    	if(!isopent)
			{
			}
			else
			{
				camera.stopPreview();
				camera.release();
				isopent = false;
			}
	    }
	};
	@SuppressLint("ShowToast")
	//用Toast来显示提示消息
	public void toast(Boolean isUp) {
		if(isUp){
			Toast.makeText(Main.this, "长按时间退出勿扰模式", 500).show();
			MyLogger.showLogWithLineNum(1, "Main", "isUp = "+ isUp);
		}else {
			Toast.makeText(Main.this, "长按时间进入勿扰模式", 500).show();
			MyLogger.showLogWithLineNum(1, "Main", "isUp = "+ isUp);
		}
		
	}
}
		
//		linearlayout_datatime.setOnClickListener(new OnClickListener() {
//			
//			@Override
//			public void onClick(View v) {
//				if(isUp == false){
//					hint.setText("长按时间进入勿扰模式");
//					hint.setVisibility(View.VISIBLE);
//				
//						//提示在1秒后隐蔽
//						timer.schedule(new TimerTask() {
//							
//							@Override
//							public void run() {
//								hint.post(hint_run);
//							}
//						}, 1000);
//					}
//					else {
//						hint.setText("长按时间退出勿扰模式");
//						hint.setVisibility(View.VISIBLE);
//						
//						//提示在1秒后隐蔽
//						timer.schedule(new TimerTask() {
//							
//							@Override
//							public void run() {
//								hint.post(hint_run);
//							}
//						}, 1000);
//					}
//			}
//		});
//		
//		//设置控件的长按效果
//		linearlayout_datatime.setOnLongClickListener(new OnLongClickListener() {
//			
//			@TargetApi(Build.VERSION_CODES.JELLY_BEAN)
//			public boolean onLongClick(View v) {
//
//				if(isUp == false){
//					linearlayout_datatime.setLayoutParams(new LinearLayout.LayoutParams(width, height));
//					linearlayout_lock.setLayoutParams(new LinearLayout.LayoutParams(width, 0));
//					main.setSystemUiVisibility(View.SYSTEM_UI_FLAG_FULLSCREEN);
//					main.setBackgroundColor(Color.BLACK);
//					hint.setText("长按时间退出勿扰模式");
//					hint.setVisibility(View.VISIBLE);
//					isUp = true;
//					
//					//提示在1秒后隐蔽
//					timer.schedule(new TimerTask() {
//						
//						@Override
//						public void run() {
//							hint.post(hint_run);
//						}
//					}, 1000);
//					}
//					else {
//						linearlayout_datatime.setLayoutParams(new LinearLayout.LayoutParams(width, linearlayout_time_height));
//						linearlayout_lock.setLayoutParams(new LinearLayout.LayoutParams(width, width));
//						main.setSystemUiVisibility(View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN);
//						main.setBackgroundColor(Color.TRANSPARENT);
//						hint.setText("长按时间进入勿扰模式");
//						hint.setVisibility(View.VISIBLE);
//						isUp = false;
//						//提示在1秒后隐蔽
//						timer.schedule(new TimerTask() {
//							
//							@Override
//							public void run() {
//								hint.post(hint_run);
//							}
//						}, 1000);
//					}
//				return false;
//			}
//		});
//	}
	
